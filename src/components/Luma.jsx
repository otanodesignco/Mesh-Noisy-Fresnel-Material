/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Luis13 (https://sketchfab.com/luis230799)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/luma-super-mario-series-c08f26fe1dcb4c45b2fc8cb0928e322a
Title: Luma - Super Mario Series
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import gsap  from 'gsap'
import MeshNoiseyFresnelMaterial from '../meshNoiseyFresnelMaterial.jsx'
import { useControls } from 'leva'
import useMouse from "../hooks/useMouse.jsx"
import { useFrame } from '@react-three/fiber'

export default function Luma(props) 
{
  const { nodes, materials } = useGLTF('./models/luma.glb')
  const self = useRef()

  const { x, y } = useMouse()

  const { colorBase, colorFresnel, noiseSpeed, noiseOffset, fresnelAmt, fresnelIntensity, fresnelBlend } = useControls({
    colorBase:
    {
        value: '#aa5939'
    }, 
    colorFresnel:
    {
        value: '#f2b717'
    }, 
    noiseSpeed:
    {
        value: 1.5,
        min: 0,
        max: 10,
        step: 0.001
    }, 
    noiseOffset:
    {
        value: 8.5,
        min: 1,
        max: 50,
        step: 0.001
    },
    fresnelAmt:
    {
        value: 4.00,
        min: 0,
        max: 10,
        step: 0.001
    }, 
    fresnelIntensity:
    {
        value: 1.25,
        min: 0,
        max: 10,
        step: 0.001
    },
    fresnelBlend:
    {
        value: 0.25,
        min: 0,
        max: 1,
        step: 0.001
    },
})

useFrame( ( state, delta ) =>
{
    gsap.to( self.current.rotation, {
        x: gsap.utils.mapRange( 0, window.innerWidth, -.07, .07, y ),
        y: gsap.utils.mapRange( 0, window.innerHeight, -.07, .07, x )
      })
} )

  return (
    <group {...props} dispose={null}  ref={self}>
      <group position={[16.73, -0.042, -103.24]} rotation={[-Math.PI / 2, 0.005, Math.PI]}>
        <mesh geometry={nodes.Object_2.geometry}>
            <MeshNoiseyFresnelMaterial
                baseColor={ colorBase }
                glowColor={ colorFresnel }
                speedOffset={ noiseSpeed }
                fresnelAmount={ fresnelAmt }
                fresnelColorIntensity={ fresnelIntensity }
                noiseOffset={ noiseOffset }
                frenselBlend={ fresnelBlend }
            />
        </mesh>
        <mesh geometry={nodes.Object_3.geometry} material={materials.Material__28} />
      </group>
    </group>
  )
}

useGLTF.preload('./models/luma.glb')